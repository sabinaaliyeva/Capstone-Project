{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Student\\\\Desktop\\\\network-tool-frontend\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\n// src/components/Settings.js\nimport React, { useState } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [emailNotifications, setEmailNotifications] = useState(true);\n  const [smsNotifications, setSmsNotifications] = useState(false);\n  const handleSave = e => {\n    e.preventDefault();\n    // Implement save settings logic here (e.g., API call)\n    alert('Settings saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"Your username\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Your email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailNotifications\",\n            children: \"Email Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailNotifications\",\n            type: \"checkbox\",\n            checked: emailNotifications,\n            onChange: () => setEmailNotifications(!emailNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"smsNotifications\",\n            children: \"SMS Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"smsNotifications\",\n            type: \"checkbox\",\n            checked: smsNotifications,\n            onChange: () => setSmsNotifications(!smsNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"VJ4FOTwBPPTVS4TgqJArMQksG3o=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","_s","emailNotifications","setEmailNotifications","smsNotifications","setSmsNotifications","handleSave","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","disabled","required","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Student/Desktop/network-tool-frontend/src/components/Settings.js"],"sourcesContent":["// src/components/Settings.js\r\nimport React, { useState } from 'react';\r\nimport './Settings.css';\r\n\r\nfunction Settings() {\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n  const [smsNotifications, setSmsNotifications] = useState(false);\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    // Implement save settings logic here (e.g., API call)\r\n    alert('Settings saved successfully!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <div className=\"settings-card\">\r\n        <h2>Settings</h2>\r\n        <form onSubmit={handleSave}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input id=\"username\" type=\"text\" placeholder=\"Your username\" disabled />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input id=\"email\" type=\"email\" placeholder=\"Your email address\" required />\r\n          </div>\r\n          <div className=\"toggle-group\">\r\n            <label htmlFor=\"emailNotifications\">Email Notifications</label>\r\n            <input\r\n              id=\"emailNotifications\"\r\n              type=\"checkbox\"\r\n              checked={emailNotifications}\r\n              onChange={() => setEmailNotifications(!emailNotifications)}\r\n            />\r\n          </div>\r\n          <div className=\"toggle-group\">\r\n            <label htmlFor=\"smsNotifications\">SMS Notifications</label>\r\n            <input\r\n              id=\"smsNotifications\"\r\n              type=\"checkbox\"\r\n              checked={smsNotifications}\r\n              onChange={() => setSmsNotifications(!smsNotifications)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Save Settings</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMS,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,KAAK,CAAC,8BAA8B,CAAC;EACvC,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCZ,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BZ,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAMiB,QAAQ,EAAEV,UAAW;QAAAK,QAAA,gBACzBZ,OAAA;UAAKW,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBZ,OAAA;YAAOkB,OAAO,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1ChB,OAAA;YAAOmB,EAAE,EAAC,UAAU;YAACC,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,eAAe;YAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACNhB,OAAA;UAAKW,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBZ,OAAA;YAAOkB,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpChB,OAAA;YAAOmB,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC,OAAO;YAACC,WAAW,EAAC,oBAAoB;YAACE,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNhB,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BZ,OAAA;YAAOkB,OAAO,EAAC,oBAAoB;YAAAN,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DhB,OAAA;YACEmB,EAAE,EAAC,oBAAoB;YACvBC,IAAI,EAAC,UAAU;YACfI,OAAO,EAAErB,kBAAmB;YAC5BsB,QAAQ,EAAEA,CAAA,KAAMrB,qBAAqB,CAAC,CAACD,kBAAkB;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhB,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BZ,OAAA;YAAOkB,OAAO,EAAC,kBAAkB;YAAAN,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3DhB,OAAA;YACEmB,EAAE,EAAC,kBAAkB;YACrBC,IAAI,EAAC,UAAU;YACfI,OAAO,EAAEnB,gBAAiB;YAC1BoB,QAAQ,EAAEA,CAAA,KAAMnB,mBAAmB,CAAC,CAACD,gBAAgB;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhB,OAAA;UAAQoB,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA9CQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}