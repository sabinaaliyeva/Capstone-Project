{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Student\\\\Desktop\\\\network-tool-frontend\\\\src\\\\components\\\\AttackDetectorPage.js\",\n  _s = $RefreshSig$();\n// src/components/AttackDetectorPage.js\nimport React, { useState, useEffect } from 'react';\nimport './AttackDetectorPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AttackDetectorPage() {\n  _s();\n  // Example log data (initial) and severity counts\n  const [logs, setLogs] = useState([{\n    time: '3:45 PM',\n    message: 'IP 192.168.1.42 suspicious activity detected',\n    severity: 'high'\n  }, {\n    time: '3:46 PM',\n    message: 'Increased latency on port 443',\n    severity: 'medium'\n  }, {\n    time: '3:47 PM',\n    message: 'Potential brute force attempt from IP 203.0.113.5',\n    severity: 'high'\n  }, {\n    time: '3:48 PM',\n    message: 'Port scan attempt detected from IP 10.0.0.5',\n    severity: 'medium'\n  }, {\n    time: '3:49 PM',\n    message: 'Unusual DNS request pattern from IP 192.168.10.2',\n    severity: 'weak'\n  }]);\n  const [error, setError] = useState('');\n\n  // Function to simulate fetching new logs\n  const fetchLogs = () => {\n    // Simulate new log data\n    const newLog = {\n      time: new Date().toLocaleTimeString(),\n      message: `New suspicious activity detected at ${new Date().toLocaleTimeString()}`,\n      severity: 'high'\n    };\n    setLogs(prevLogs => [newLog, ...prevLogs]);\n  };\n\n  // Refresh logs manually\n  const handleRefresh = () => {\n    fetchLogs();\n  };\n\n  // Calculate severity counts\n  const severityCounts = {\n    weak: logs.filter(log => log.severity === 'weak').length,\n    medium: logs.filter(log => log.severity === 'medium').length,\n    high: logs.filter(log => log.severity === 'high').length\n  };\n\n  // Total logs for normalization if needed\n  const totalLogs = logs.length;\n  const weakPercent = severityCounts.weak / totalLogs * 100 || 0;\n  const mediumPercent = severityCounts.medium / totalLogs * 100 || 0;\n  const highPercent = severityCounts.high / totalLogs * 100 || 0;\n\n  // Automatic refresh every 3 minutes (180000 ms)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchLogs();\n    }, 180000); // 3 minutes in milliseconds\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attack-detector-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"24/7 Attack Detector: Log Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Below are live logs and their severity classification.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"severity-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"severity-labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Weak: \", severityCounts.weak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Medium: \", severityCounts.medium]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"High: \", severityCounts.high]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"severity-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"severity-bar weak-bar\",\n          style: {\n            width: `${weakPercent}%`\n          },\n          title: `Weak: ${severityCounts.weak}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"severity-bar medium-bar\",\n          style: {\n            width: `${mediumPercent}%`\n          },\n          title: `Medium: ${severityCounts.medium}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"severity-bar high-bar\",\n          style: {\n            width: `${highPercent}%`\n          },\n          title: `High: ${severityCounts.high}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-container\",\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `log-entry ${log.severity}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-time\",\n            children: [\"[\", log.time, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), \" \", log.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        className: \"refresh-button\",\n        children: \"Refresh Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(AttackDetectorPage, \"78QUykAzrpGBeVxND0hk7kNsFW8=\");\n_c = AttackDetectorPage;\nexport default AttackDetectorPage;\nvar _c;\n$RefreshReg$(_c, \"AttackDetectorPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AttackDetectorPage","_s","logs","setLogs","time","message","severity","error","setError","fetchLogs","newLog","Date","toLocaleTimeString","prevLogs","handleRefresh","severityCounts","weak","filter","log","length","medium","high","totalLogs","weakPercent","mediumPercent","highPercent","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","title","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Student/Desktop/network-tool-frontend/src/components/AttackDetectorPage.js"],"sourcesContent":["// src/components/AttackDetectorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './AttackDetectorPage.css';\r\n\r\nfunction AttackDetectorPage() {\r\n  // Example log data (initial) and severity counts\r\n  const [logs, setLogs] = useState([\r\n    { time: '3:45 PM', message: 'IP 192.168.1.42 suspicious activity detected', severity: 'high' },\r\n    { time: '3:46 PM', message: 'Increased latency on port 443', severity: 'medium' },\r\n    { time: '3:47 PM', message: 'Potential brute force attempt from IP 203.0.113.5', severity: 'high' },\r\n    { time: '3:48 PM', message: 'Port scan attempt detected from IP 10.0.0.5', severity: 'medium' },\r\n    { time: '3:49 PM', message: 'Unusual DNS request pattern from IP 192.168.10.2', severity: 'weak' },\r\n  ]);\r\n  const [error, setError] = useState('');\r\n\r\n  // Function to simulate fetching new logs\r\n  const fetchLogs = () => {\r\n    // Simulate new log data\r\n    const newLog = {\r\n      time: new Date().toLocaleTimeString(),\r\n      message: `New suspicious activity detected at ${new Date().toLocaleTimeString()}`,\r\n      severity: 'high',\r\n    };\r\n\r\n    setLogs((prevLogs) => [newLog, ...prevLogs]);\r\n  };\r\n\r\n  // Refresh logs manually\r\n  const handleRefresh = () => {\r\n    fetchLogs();\r\n  };\r\n\r\n  // Calculate severity counts\r\n  const severityCounts = {\r\n    weak: logs.filter(log => log.severity === 'weak').length,\r\n    medium: logs.filter(log => log.severity === 'medium').length,\r\n    high: logs.filter(log => log.severity === 'high').length,\r\n  };\r\n\r\n  // Total logs for normalization if needed\r\n  const totalLogs = logs.length;\r\n  const weakPercent = (severityCounts.weak / totalLogs) * 100 || 0;\r\n  const mediumPercent = (severityCounts.medium / totalLogs) * 100 || 0;\r\n  const highPercent = (severityCounts.high / totalLogs) * 100 || 0;\r\n\r\n  // Automatic refresh every 3 minutes (180000 ms)\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchLogs();\r\n    }, 180000); // 3 minutes in milliseconds\r\n\r\n    // Cleanup the interval on component unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"attack-detector-page\">\r\n      <h2>24/7 Attack Detector: Log Overview</h2>\r\n      <p className=\"description\">Below are live logs and their severity classification.</p>\r\n\r\n      {/* Severity Classification Diagram */}\r\n      <div className=\"severity-chart\">\r\n        <div className=\"severity-labels\">\r\n          <span>Weak: {severityCounts.weak}</span>\r\n          <span>Medium: {severityCounts.medium}</span>\r\n          <span>High: {severityCounts.high}</span>\r\n        </div>\r\n        <div className=\"severity-bar-container\">\r\n          <div\r\n            className=\"severity-bar weak-bar\"\r\n            style={{ width: `${weakPercent}%` }}\r\n            title={`Weak: ${severityCounts.weak}`}\r\n          ></div>\r\n          <div\r\n            className=\"severity-bar medium-bar\"\r\n            style={{ width: `${mediumPercent}%` }}\r\n            title={`Medium: ${severityCounts.medium}`}\r\n          ></div>\r\n          <div\r\n            className=\"severity-bar high-bar\"\r\n            style={{ width: `${highPercent}%` }}\r\n            title={`High: ${severityCounts.high}`}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Logs Section */}\r\n      <div className=\"logs-section\">\r\n        <h3>Live Logs</h3>\r\n        <div className=\"logs-container\">\r\n          {logs.map((log, index) => (\r\n            <div className={`log-entry ${log.severity}`} key={index}>\r\n              <span className=\"log-time\">[{log.time}]</span> {log.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Refresh Button */}\r\n        <button onClick={handleRefresh} className=\"refresh-button\">\r\n          Refresh Logs\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AttackDetectorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}