{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Student\\\\Desktop\\\\network-tool-frontend\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [emailNotifications, setEmailNotifications] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const handleSave = e => {\n    e.preventDefault();\n    // Implement save settings logic here (e.g., API call)\n    alert('Settings saved successfully!');\n    // Reset form or handle state as needed\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `settings-container ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"settings-form\",\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"Your username\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Your email address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter a new password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailNotifications\",\n            children: \"Email Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailNotifications\",\n            type: \"checkbox\",\n            checked: emailNotifications,\n            onChange: () => setEmailNotifications(!emailNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dark-mode-btn\",\n      onClick: toggleDarkMode,\n      children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"/MyGgkdCVJhAPNm5dcJ98KDE2cQ=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","_s","emailNotifications","setEmailNotifications","email","setEmail","password","setPassword","isDarkMode","setIsDarkMode","handleSave","e","preventDefault","alert","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","disabled","value","onChange","target","required","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Student/Desktop/network-tool-frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Settings.css';\r\n\r\nfunction Settings() {\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    // Implement save settings logic here (e.g., API call)\r\n    alert('Settings saved successfully!');\r\n    // Reset form or handle state as needed\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <div className={`settings-container ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"settings-card\">\r\n        <h2>Settings</h2>\r\n        <form className=\"settings-form\" onSubmit={handleSave}>\r\n          {/* Username (Read-Only) */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input id=\"username\" type=\"text\" placeholder=\"Your username\" disabled />\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Your email address\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Change Password */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">New Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter a new password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {/* Toggle Email Notifications */}\r\n          <div className=\"toggle-group\">\r\n            <label htmlFor=\"emailNotifications\">Email Notifications</label>\r\n            <input\r\n              id=\"emailNotifications\"\r\n              type=\"checkbox\"\r\n              checked={emailNotifications}\r\n              onChange={() => setEmailNotifications(!emailNotifications)}\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* Save Settings Button */}\r\n          <button type=\"submit\">Save Settings</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Dark Mode Toggle Button */}\r\n      <button className=\"dark-mode-btn\" onClick={toggleDarkMode}>\r\n        {isDarkMode ? 'Light Mode' : 'Dark Mode'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}